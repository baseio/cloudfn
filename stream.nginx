# ln -s /var/www/cloudfn-system/stream.nginx /etc/nginx/sites-enabled/
# $ service nginx reload
# letsencrypt certs:
# $ certbot-auto certonly -a webroot --webroot-path=/var/www/cloudfn-system -d cloudfn.stream 

#- Congratulations! Your certificate and chain have been saved at
#   /etc/letsencrypt/live/cloudfn.stream/fullchain.pem. Your cert will
#   expire on 2017-02-23. To obtain a new or tweaked version of this
#   certificate in the future, simply run certbot-auto again. To
#   non-interactively renew *all* of your certificates, run
#   "certbot-auto renew"


server {
	listen         	80;
	server_name 	cloudfn.stream;
	server_tokens off;
	
	return 301 		https://$host$request_uri;
	
	location ~ /.well-known {
		allow all;
	}
	
	root /var/www/cloudfn-system;
}


server {
	listen 443 ssl;

	server_name cloudfn.stream;
	server_tokens off;
	client_max_body_size 9M;

	access_log /var/log/nginx/stream-access.log;
	error_log /var/log/nginx/stream-error.log;

	ssl_certificate 		/etc/letsencrypt/live/cloudfn.stream/fullchain.pem;
	ssl_certificate_key 	/etc/letsencrypt/live/cloudfn.stream/privkey.pem;

	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_dhparam /etc/ssl/certs/dhparam.pem;
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
    ssl_session_timeout 1d;
    #ssl_session_cache shared:SSL:50m;
    ssl_stapling on;
    ssl_stapling_verify on;
    add_header Strict-Transport-Security max-age=15768000;

    location * {

    	deny 66.249.69.126; # also added to IP tables.

    }

    location @cloudfnProxy {
		proxy_pass http://localhost:3033;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection 'upgrade';
		proxy_set_header Host $host;
		proxy_set_header X-Http-Origin $http_origin;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_cache_bypass $http_upgrade;
	}

	location ~ \. {
		#root /var/www/cloudfn-system/tasks;
		#try_files $uri @cloudfnProxy;
		root /var/www/cloudfn-system/static;
		#try_files $uri @cloudfnProxy;
	}


	location / {

		if ($request_method = 'OPTIONS') {
			add_header 'Access-Control-Allow-Origin' '*';
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
			
			# Custom headers and headers various browsers *should* be OK with but aren't
			add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
		
			# Tell client that this pre-flight info is valid for 20 days
			add_header 'Access-Control-Max-Age' 1728000;
			add_header 'Content-Type' 'text/plain charset=UTF-8';
			add_header 'Content-Length' 0;
			return 204;
		}
		if ($request_method = 'POST') {
			add_header 'Access-Control-Allow-Origin' '*';
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
			add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
		}
		if ($request_method = 'GET') {
			add_header 'Access-Control-Allow-Origin' '*';
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
			add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
		}


		# proxy_pass http://localhost:3033;
		# proxy_http_version 1.1;
		# proxy_set_header Upgrade $http_upgrade;
		# proxy_set_header Connection 'upgrade';
		# proxy_set_header Host $host;
		# proxy_set_header X-Http-Origin $http_origin;
		# proxy_set_header X-Real-IP $remote_addr;
		# proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		# proxy_cache_bypass $http_upgrade;


		#root /var/www/cloudfn-system/tasks;
		#try_files $uri @cloudfnProxy;

		proxy_pass http://localhost:3033;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection 'upgrade';
		proxy_set_header Host $host;
		proxy_set_header X-Http-Origin $http_origin;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_cache_bypass $http_upgrade;
	}
}



upstream netdata_backend {
    # the netdata server
    server 127.0.0.1:19999;
    keepalive 64;
}


# printf "baseio:$(openssl passwd -crypt 'session0')" > /etc/nginx/passwords

server {
    # nginx listens to this
    listen 80;

    # the virtual host name of this
    server_name stats.cloudfn.stream;

    auth_basic "Protected";
    auth_basic_user_file passwords;

    location / {
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://netdata_backend;
        proxy_http_version 1.1;
        proxy_pass_request_headers on;
        proxy_set_header Connection "keep-alive";
        proxy_store off;
    }
}